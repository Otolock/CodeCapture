import React, { useState, useCallback, forwardRef } from 'react';
import CodeMirror from '@uiw/react-codemirror';
import { EditorView } from '@uiw/react-codemirror';
import { javascript } from '@codemirror/lang-javascript';
import { html } from '@codemirror/lang-html';
import { less } from '@codemirror/lang-less';
import { json } from '@codemirror/lang-json';
import { python } from '@codemirror/lang-python';

export const CodeEditor = forwardRef((props, ref) => {
  const [selectedLanguage, setSelectedLanguage] = useState('javascript');
  const [value, setValue] = useState(`
import React from 'react';
import ReactDOM from 'react-dom';

function App() {
  return <h1>Hello, world!</h1>;
}

ReactDOM.render(<App />, document.getElementById('root'));
  `.trim());

  const onChange = useCallback((val, viewUpdate) => {
    console.log('val:', val);
    setValue(val);
  }, []);

  const getLanguageExtension = (language) => {
    switch (language) {
      case 'javascript':
        return javascript({ jsx: true });
      case 'html':
        return html();
      case 'less':
        return less();
      case 'json':
        return json();
      case 'python':
        return python();
      // Add other languages here as needed
      default:
        return javascript({ jsx: true });
    }
  };

  const languageOptions = [
    { label: 'JavaScript', value: 'javascript' },
    { label: 'HTML', value: 'html' },
    { label: 'CSS', value: 'less' },
    { label: 'JSON', value: 'json' },
    { label: 'Python', value: 'python' },
  ];

  return (
    <>
      <div>
        <label htmlFor="language" className="block text-sm font-medium leading-6 text-gray-900">
          Language
        </label>
        <select
          aria-label="Select Programming Language"
          id="language"
          name="language"
          value={selectedLanguage}
          onChange={(e) => setSelectedLanguage(e.target.value)}
          className="my-2 block rounded-md border-0 py-1.5 pl-3 pr-10 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-emerald-600 sm:text-sm sm:leading-6"
        >
          {languageOptions.map(lang => (
            <option key={lang.value} value={lang.value}>
              {lang.label}
            </option>
          ))}
        </select>
      </div>
      <div ref={ref} className="overflow-hidden rounded-lg bg-white shadow">
        <div className="px-4 py-5 sm:p-6">
          <CodeMirror
            value={value}
            extensions={[getLanguageExtension(selectedLanguage), EditorView.lineWrapping]}
            onChange={onChange}
            
          />
        </div>
        <div className="bg-gray-200 px-2 py-2 sm:px-3">
          {/* Content goes here */}
          {/* We use less vertical padding on card footers at all sizes than on headers or body sections */}
          <span className='text-xs'>Generated by codecapture.app</span>
        </div>
      </div>
    </>
  );
});

CodeEditor.displayName = 'CodeEditor';