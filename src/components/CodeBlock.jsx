import Prism from "prismjs";
import "prismjs/components/prism-jsx";
import "prismjs/themes/prism.css";
import { useEffect, useRef } from "react";

export default function CodeBlock({ code, language }) {
  const codeRef = useRef(null);

  useEffect(() => {
    if (codeRef.current) {
      // Set the innerHTML of the code element to the new code
      codeRef.current.innerHTML = code;
      // Re-run Prism's syntax highlighting on the new content
      Prism.highlightElement(codeRef.current);
    }
  }, [code, language]); // Dependency on code and language

  return (
    <>
      <pre>
        <code style={{ whiteSpace: 'pre-wrap' }} ref={codeRef} className={`language-${language}`}>
          {/* Code is set via innerHTML in useEffect */}
        </code>
      </pre>
      <div className="text-white text-sm p-2 text-center bg-gray-800 rounded-b-lg m-0">
        Code snippet image generated by codecapture.app
      </div>
    </>
  );
}
